(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{"7+rV":function(e,t,n){var r=n("K54E");r=r.default||r,e.exports={component:r,props:{frontMatter:{title:"Change worldview of administrative boundaries",description:"Use the worldview value to adjust administrative boundaries based on the map's audience.",topics:["Layers","User interaction"],thumbnail:"toggle-worldviews",contentType:"example",layout:"example",language:["JavaScript"],products:["Mapbox GL JS","Mapbox Streets tileset"],prependJs:["import Example from '../../components/example';","import html from './toggle-worldviews.html';"]}}}},K54E:function(e,t,n){"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=c(n("q1tI")),a=(n("yr+R"),n("cQZ0"),c(n("uLm5"))),i=c(n("gi5g")),s=c(n("1wO5"));function c(e){return e&&e.__esModule?e:{default:e}}function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function u(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function f(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=h(e);if(t){var o=h(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return m(this,n)}}function m(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function h(e){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var b={title:"Change worldview of administrative boundaries",description:"Use the worldview value to adjust administrative boundaries based on the map's audience.",topics:["Layers","User interaction"],thumbnail:"toggle-worldviews",contentType:"example",layout:"example",language:["JavaScript"],products:["Mapbox GL JS","Mapbox Streets tileset"],headings:[]},w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(m,e);var t,n,r,c=f(m);function m(){return u(this,m),c.apply(this,arguments)}return t=m,(n=[{key:"render",value:function(){var e=this.props;return o.default.createElement(s.default,l({},e,{frontMatter:b}),o.default.createElement("div",null,o.default.createElement("p",null,"Use the ",o.default.createElement("code",null,"worldview")," value to adjust administrative boundaries based on the map's audience. Read more about ",o.default.createElement("a",{href:"https://docs.mapbox.com/help/glossary/worldview/"},"worldviews"),"."),o.default.createElement(a.default,l({html:i.default},this.props))))}}])&&p(t.prototype,n),r&&p(t,r),m}(o.default.PureComponent);t.default=w},M4Oy:function(e,t,n){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=((r=n("fG8n"))&&r.__esModule?r:{default:r}).default;t.default=o},gi5g:function(e,t,n){"use strict";n.r(t),t.default="<style>\n    #menu {\n        position: absolute;\n        background: #fff;\n        padding: 20px;\n        margin: 20px;\n        font-family: 'Open Sans', sans-serif;\n        max-width: 180px;\n    }\n    #worldview-options {\n        margin-top: 10px;\n    }\n</style>\n\n<div id=\"map\"></div>\n<div id=\"menu\">\n    <div>\n        Display administrative boundaries consistent with the following\n        worldview:\n    </div>\n    \x3c!-- The worldview options will be built dynamically using JavaScript (below). --\x3e\n    <div id=\"worldview-options\"></div>\n</div>\n\n<script>\n    var map = new mapboxgl.Map({\n        container: 'map',\n        // The worldview data field is only available in styles\n        // that use the Mapbox Streets v8 tileset\n        // https://docs.mapbox.com/vector-tiles/reference/mapbox-streets-v8/\n        // or Mapbox Boundaries v3 tileset\n        // https://docs.mapbox.com/vector-tiles/reference/mapbox-boundaries-v3/\n        style: 'mapbox://styles/mapbox/light-v10',\n        center: [88, 26],\n        zoom: 4\n    });\n\n    // List the worldviews options you want users to select from. For\n    // available worldviews, see https://docs.mapbox.com/help/glossary/worldview/.\n    var availableWorldviews = [\n        {\n            code: 'CN',\n            name: 'China'\n        },\n        {\n            code: 'IN',\n            name: 'India'\n        },\n        {\n            code: 'JP',\n            name: 'Japan'\n        },\n        {\n            code: 'US',\n            name: 'United States'\n        }\n    ];\n\n    // Choose a worldview you want to use when the map is first loaded.\n    // Styles created by Mapbox default to \"US\" as the initial worldview.\n    var worldviewOnMapLoad = 'US';\n\n    // Build the menu.\n    // Alternatively, you could hard code the menu in your HTML directly.\n    var worldviewOptions = document.getElementById('worldview-options');\n    // Iterate through all availableWorldviews.\n    availableWorldviews.forEach(function (worldview) {\n        // Create three new elements for each worldview.\n        var radioItem = document.createElement('div');\n        var radioInput = document.createElement('input');\n        var radioLabel = document.createElement('label');\n        // Assign attributes based on the worldview.\n        radioInput.type = 'radio';\n        radioInput.name = 'toggle-worldview';\n        radioInput.id = worldview.code;\n        radioInput.value = worldview.code;\n        radioInput.checked = worldview.code === worldviewOnMapLoad;\n        radioLabel.htmlFor = worldview.code;\n        radioLabel.innerText = worldview.code + ' (' + worldview.name + ')';\n        // Append the input and label elements to the radioItem div.\n        radioItem.appendChild(radioInput);\n        radioItem.appendChild(radioLabel);\n        // Append the radioItem div to the worldviewOptions div that\n        // will contain all the radio buttons.\n        worldviewOptions.appendChild(radioItem);\n    });\n\n    // Wait for the map to finish loading.\n    map.on('load', function () {\n        // Filter the \"admin-0-*\" layers to display\n        // administrative boundaries consistent with the\n        // initial worldview defined above (\"CN\").\n        filterLayers(worldviewOnMapLoad);\n        // Get all the worldview option inputs and loop through them.\n        var inputs = worldviewOptions.getElementsByTagName('input');\n        for (var i = 0; i < inputs.length; i++) {\n            // Specify that the switchWorldview function\n            // (defined below) should run every time an input\n            // is clicked.\n            inputs[i].onclick = switchWorldview;\n        }\n    });\n\n    // Create a function that will identify which worldview\n    // is currently selected and run the filterLayers function\n    // with that worldview as an argument.\n    function switchWorldview(option) {\n        filterLayers(option.target.id);\n    }\n\n    // Update the filter for each \"admin-0-*\" layer, which contain\n    // administrative boundaries at the country level.\n    // These are the same filters used in the Mapbox Light\n    // style except that the worldview is based on user input.\n    function filterLayers(worldview) {\n        // The \"admin-0-boundary-disputed\" layer shows boundaries\n        // at this level that are known to be disputed.\n        map.setFilter('admin-0-boundary-disputed', [\n            'all',\n            ['==', ['get', 'disputed'], 'true'],\n            ['==', ['get', 'admin_level'], 0],\n            ['==', ['get', 'maritime'], 'false'],\n            ['match', ['get', 'worldview'], ['all', worldview], true, false]\n        ]);\n        // The \"admin-0-boundary\" layer shows all boundaries at\n        // this level that are not disputed.\n        map.setFilter('admin-0-boundary', [\n            'all',\n            ['==', ['get', 'admin_level'], 0],\n            ['==', ['get', 'disputed'], 'false'],\n            ['==', ['get', 'maritime'], 'false'],\n            ['match', ['get', 'worldview'], ['all', worldview], true, false]\n        ]);\n        // The \"admin-0-boundary-bg\" layer helps features in both\n        // \"admin-0-boundary\" and \"admin-0-boundary-disputed\" stand\n        // out visually.\n        map.setFilter('admin-0-boundary-bg', [\n            'all',\n            ['==', ['get', 'admin_level'], 0],\n            ['==', ['get', 'maritime'], 'false'],\n            ['match', ['get', 'worldview'], ['all', worldview], true, false]\n        ]);\n    }\n<\/script>\n"},mOgX:function(e,t,n){"use strict";n.r(t);var r=n("f4rJ");n("yr+R");function o(e,t){return t&&t.local,"https://unpkg.com/maplibre-gl@".concat(r.a,"/dist/maplibre-gl.").concat(e)}t.default={js:function(e){return o("js",e)},css:function(e){return o("css",e)}}},uLm5:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return M}));var r=n("q1tI"),o=n.n(r),a=(n("17x9"),n("mOgX")),i=n("v8ZZ"),s=n.n(i),c=n("irdr"),l=n.n(c),u=n("M4Oy"),p=n.n(u),d=n("umIL"),f=n("wdKx");function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function h(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?h(Object(n),!0).forEach((function(t){x(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):h(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function y(e,t){return(y=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function v(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=O(e);if(t){var o=O(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return g(this,n)}}function g(e,t){return!t||"object"!==m(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function O(e){return(O=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function x(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var j='<meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no" />',S="\tbody { margin: 0; padding: 0; }\n\t#map { position: absolute; top: 0; bottom: 0; width: 100%; }",M=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&y(e,t)}(c,e);var t,n,r,i=v(c);function c(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,e)).state={token:void 0,unsupported:!1},t}return t=c,(n=[{key:"addToken",value:function(e){var t=this.state.token?"":"\n\t// TO MAKE THE MAP APPEAR YOU MUST\n\t// ADD YOUR ACCESS TOKEN FROM\n\t// https://account.mapbox.com";return e.replace("<script>","<script>".concat(t,"\n\tmapboxgl.accessToken = '").concat(this.state.token||"<your access token here>","';"))}},{key:"displayHTML",value:function(e){return'<!DOCTYPE html>\n<html>\n<head>\n<meta charset="utf-8" />\n<title>'.concat(this.props.frontMatter.title,"</title>\n").concat(j,'\n<script src="').concat(a.default.js(),'"><\/script>\n<link href="').concat(a.default.css(),'" rel="stylesheet" />\n<style>\n').concat(S,"\n</style>\n</head>\n<body>\n").concat(this.addToken(e),"\n</body>\n</html>")}},{key:"renderHTML",value:function(e){return"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=utf-8 />\n<title>".concat(this.props.frontMatter.title,"</title>\n").concat(j,"\n<script src='https://js.sentry-cdn.com/b4e18cb1943f46289f67ca6a771bd341.min.js' crossorigin=\"anonymous\"><\/script>\n<script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-instrumentile/v3.0.0/mapbox-gl-instrumentile.js' crossorigin=\"anonymous\"><\/script>\n\n<script src='").concat(a.default.js({local:!0}),"'><\/script>\n<link href='").concat(a.default.css({local:!0}),"' rel='stylesheet' />\n<style>\n    ").concat(S,"\n</style>\n<script>mapboxgl.accessToken = '").concat(MapboxPageShell.getMapboxAccessToken(),"'<\/script>\n</head>\n<body>\n").concat(e,"\n</body>\n<script>\nif (window.map instanceof mapboxgl.Map) {\n    var i = new instrumentile(map, {\n        token: '").concat(MapboxPageShell.getMapboxAccessToken(),"',\n        api: 'https://api.tiles.mapbox.com',\n        source: 'docs-examples'\n    });\n}\n<\/script>\n</html>")}},{key:"renderSnippet",value:function(){var e=this.props,t=e.html,n=e.location,r=this.displayHTML(t),a=f.extractor(r);return o.a.createElement("div",{className:"bg-white"},o.a.createElement("div",{id:"code",className:"relative"},o.a.createElement(l.a,{code:this.displayHTML(t),highlighter:function(){return d.highlightHtml},edit:{frontMatter:b(b({},this.props.frontMatter),{},{pathname:n.pathname}),head:j,js:a.js,html:a.html,css:a.css,resources:a.resources}})))}},{key:"render",value:function(){var e=this,t=this.props,n=t.frontMatter,r=t.height;return o.a.createElement("div",{className:"prose"},this.state.unsupported&&o.a.createElement(p.a,{title:"Mapbox GL unsupported",theme:"warning"},"Mapbox GL requires"," ",o.a.createElement("a",{className:"link",href:"https://caniuse.com/#feat=webgl"},"WebGL support"),". Please check that you are using a supported browser and that"," ",o.a.createElement("a",{className:"link",href:"https://get.webgl.org/"},"WebGL is enabled"),"."),s()()&&o.a.createElement("iframe",{id:"demo",style:{height:r},className:"w-full mt18",allowFullScreen:!0,mozallowfullscreen:"true",webkitallowfullscreen:"true",ref:function(t){e.iframe=t},title:"".concat(n.title," example")}),this.props.displaySnippet&&this.renderSnippet())}},{key:"componentDidMount",value:function(){var e=this;if(s()()||this.setState({unsupported:!0}),this.iframe){var t=this.iframe.contentWindow.document;t.open(),t.write(this.renderHTML(this.props.html)),t.close(),MapboxPageShell.afterUserCheck((function(){e.setState({token:MapboxPageShell.getUserPublicAccessToken()})}))}}}])&&w(t.prototype,n),r&&w(t,r),c}(o.a.Component);x(M,"defaultProps",{displaySnippet:!0,height:400})},v8ZZ:function(e,t,n){"use strict";function r(e){return!o(e)}function o(e){return"undefined"==typeof window||"undefined"==typeof document?"not a browser":Array.prototype&&Array.prototype.every&&Array.prototype.filter&&Array.prototype.forEach&&Array.prototype.indexOf&&Array.prototype.lastIndexOf&&Array.prototype.map&&Array.prototype.some&&Array.prototype.reduce&&Array.prototype.reduceRight&&Array.isArray?Function.prototype&&Function.prototype.bind?Object.keys&&Object.create&&Object.getPrototypeOf&&Object.getOwnPropertyNames&&Object.isSealed&&Object.isFrozen&&Object.isExtensible&&Object.getOwnPropertyDescriptor&&Object.defineProperty&&Object.defineProperties&&Object.seal&&Object.freeze&&Object.preventExtensions?"JSON"in window&&"parse"in JSON&&"stringify"in JSON?function(){if(!("Worker"in window&&"Blob"in window&&"URL"in window))return!1;var e,t,n=new Blob([""],{type:"text/javascript"}),r=URL.createObjectURL(n);try{t=new Worker(r),e=!0}catch(t){e=!1}t&&t.terminate();return URL.revokeObjectURL(r),e}()?"Uint8ClampedArray"in window?ArrayBuffer.isView?function(){const e=document.createElement("canvas");e.width=e.height=1;const t=e.getContext("2d");if(!t)return!1;const n=t.getImageData(0,0,1,1);return n&&n.width===e.width}()?function(e){void 0===a[e]&&(a[e]=function(e){const t=function(e){var t=document.createElement("canvas"),n=Object.create(r.webGLContextAttributes);return n.failIfMajorPerformanceCaveat=e,t.probablySupportsContext?t.probablySupportsContext("webgl",n)||t.probablySupportsContext("experimental-webgl",n):t.supportsContext?t.supportsContext("webgl",n)||t.supportsContext("experimental-webgl",n):t.getContext("webgl",n)||t.getContext("experimental-webgl",n)}(e);if(!t)return!1;const n=t.createShader(t.VERTEX_SHADER);if(!n||t.isContextLost())return!1;return t.shaderSource(n,"void main() {}"),t.compileShader(n),!0===t.getShaderParameter(n,t.COMPILE_STATUS)}(e));return a[e]}(e&&e.failIfMajorPerformanceCaveat)?void 0:"insufficient WebGL support":"insufficient Canvas/getImageData support":"insufficient ArrayBuffer support":"insufficient Uint8ClampedArray support":"insufficient worker support":"insufficient JSON support":"insufficient Object support":"insufficient Function support":"insufficent Array support"}e.exports?e.exports=r:window&&(window.mapboxgl=window.mapboxgl||{},window.mapboxgl.supported=r,window.mapboxgl.notSupportedReason=o);var a={};r.webGLContextAttributes={antialias:!1,alpha:!0,stencil:!0,depth:!0}},wdKx:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.extractor=function(e){var t="",n={js:[],css:[]},r=/src=("|')([^']*?)("|')/g,o=/href=("|')([^']*?)("|')/g,a=/<script>((.|\n)*)<\/script>/,i=/<style\b[^>]*>([\s\S]*?)<\/style>/g,s=/<body[\s\S]*?>((.|\n)*)<\/body>/,c=e.match(i),l="".concat(e.replace(a,"")),u=e.match(a)[1];c&&(c.forEach((function(e){t+=e.replace(/<[^>]*>/g,"")})),l="".concat(l.replace(i,"")));if(e.match(r)){var p=e.match(r).map((function(e){return e.replace("src=","").replace(/["']/g,"")}));n.js=n.js.concat(p),l="".concat(l.replace(/<script[\s\S]*?>[\s\S]*?<\/script>/g,""))}if(e.match(o)){var d=e.match(o).map((function(e){return e.replace("href=","").replace(/["']/g,"")}));n.css=n.css.concat(d),l="".concat(l.replace(/<link[\s\S]*?>/g,""))}l.match(s)&&(l=l.match(s)[1]);return{html:l,css:t,js:u,resources:n}}}}]);
//# sourceMappingURL=maplibre-gl-js-docs-example-toggle-worldviews-11edeedb44be580e6df4.chunk.js.map